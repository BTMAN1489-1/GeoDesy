# Generated by Django 5.0.6 on 2024-05-19 18:38

import django.db.models.deletion
import main_app.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='FederalDistrict',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='TFA',
            fields=[
                ('tfa_id', models.CharField(primary_key=True, serialize=False)),
                ('confirm_code', models.CharField()),
                ('expired_datetime_code', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=255, verbose_name='Имя')),
                ('second_name', models.CharField(max_length=255, verbose_name='Фамилия')),
                ('third_name', models.CharField(max_length=255, verbose_name='Отчество')),
                ('sex', models.TextField(choices=[('male', 'Мужской'), ('female', 'Женский')], verbose_name='Пол')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Сотрудник')),
                ('password', models.CharField()),
                ('salt', models.CharField()),
            ],
            options={
                'verbose_name': 'пользователь',
                'verbose_name_plural': 'пользователи',
            },
        ),
        migrations.CreateModel(
            name='FederalSubject',
            fields=[
                ('subject_code', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='subjects', to='main_app.federaldistrict')),
            ],
        ),
        migrations.CreateModel(
            name='GeoPoint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='geo_points', to='main_app.federalsubject')),
            ],
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('api_id', models.UUIDField(primary_key=True, serialize=False)),
                ('update_session_datetime', models.DateTimeField(auto_now=True)),
                ('refresh_token', models.CharField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='main_app.user')),
            ],
        ),
        migrations.CreateModel(
            name='Card',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.TextField(choices=[('success', 'Успешно'), ('denied', 'Отказано'), ('pending', 'В процессе проверки'), ('sending', 'Отправлено')])),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('description', models.JSONField()),
                ('coordinates', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='cards', to='main_app.geopoint')),
                ('executor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='exec_cards', to='main_app.user')),
                ('inspector', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='inspect_cards', to='main_app.user')),
            ],
            options={
                'verbose_name': 'карточка',
                'verbose_name_plural': 'карточки',
            },
            bases=(models.Model, main_app.models.CountMixin),
        ),
    ]
